<!DOCTYPE html>
<html>
  <head>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css"
    />
    <link type="text/css" href="css/styles3.css" rel="stylesheet" />

    <title>Discussion App</title>
  </head>
  <body>
    <header>
      <h1>Discussion Forum</h1>
    </header>

  <% var q= discussions; %>
    <input type="hidden" id="discussioninput" value="<%=discussions%>">
    <div class="main-container">
      <div class="container-left">
        <div class="button-wrapper">
          <button class="btn-add" id="show-welcome">New Question</button>
          <input
            type="text"
            name="search"
            id="search"
            class="search"
            placeholder="search questions . . ."
          />
          <button class="btn-add" id="show-Starred" style="margin-left: 10px">
            Starred
          </button>
        </div>
        <div class="questions1" id="questions1">
          <% var i=1; %>
          <% discussions.forEach(function(discussion){ %>
              <div class="que-item" id=<%=i%>>
                <% i+= 1; %>
                <h2 class="que-title"></h2>
                <p class="que-text"></p>
              </div>
          <% }) %>
        </div>
      </div>
      <div class="container-right" id="right">
        <div id="welcome">
          <h1>Welcome to the Discussion Portal!</h1>
          <p class="text">Enter a subjct and question to get started</p>
          <form id="formAdd" action="mailto:buddy.blp@gmail.com">
            <input
              type="text"
              name="subject"
              class="subject"
              placeholder="Subject"
              required="true"
            /><br />
            <textarea
              name="question"
              rows="6"
              placeholder="Question"
              required
            ></textarea>
            <div class="btn-submit">
              <button id="add-que" type="submit">Submit</button>
            </div>
          </form>
        </div>
        <div id="description">
          <h2 class="text">Question</h2>
          <div class="que-content">
            <h2 class="que-title" id="que-title"></h2>
            <p class="que-text" id="que-text"></p>
            <span class="star">star</span>
          </div>
          <div class="resolve">
            <div class="icons">
              <i class="fa fa-thumbs-up" id="upvote" aria-hidden="true"></i>
              <span id="votes"></span>
              <i class="fa fa-thumbs-down" id="downvote" aria-hidden="true"></i>
              <i class="fa fa-star" id="starred" aria-hidden="true"></i>
            </div>
            <button id="resolve">Resolve</button>
          </div>
          <div class="response-wrapper">
            <h3 class="text">Response</h3>
            <div class="responses" id="responses">
              <div class="response">
                <h3 class="res-name">Amit</h3>
                <p class="res-text"></p>
              </div>
              <div class="response">
                <h3 class="res-name">Amit</h3>
                <p class="res-text"></p>
              </div>
            </div>
            <div class="response-form">
              <h2 class="text">Add Response</h2>
              <form id="resForm" action="mailto:buddy.blp@gmail.com">
                <input
                  type="text"
                  name="subject"
                  class="subject"
                  placeholder="Enter Name"
                  minlength="3"
                  maxlength="20"
                  required
                /><br />
                <textarea
                  name="question"
                  rows="4"
                  placeholder="Enter Comment"
                  maxlength="1000"
                  required
                ></textarea>
                <div class="btn-submit">
                  <button id="add-res">Submit</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
    <iframe style="background: #FFFFFF;border: none;border-radius: 2px;box-shadow: 0 2px 10px 0 rgba(70, 76, 79, .2);" width="640" height="480" src="https://charts.mongodb.com/charts-lanisa-vvwqb/embed/charts?id=54afc9c8-36e5-4c2e-a148-9c05af48a293&theme=light"></iframe>
    <script>
    var discussions= <%- JSON.stringify(q) %>;
    var questions = Object.assign({}, discussions);

    var rightContainer = document.getElementById("right");
    var description = document.getElementById("description");
    var welcome = document.getElementById("welcome");
    var questionItems = document.querySelectorAll(".que-item");
    var totalQuestions = questionItems.length;

    var queTitle = document.getElementById("que-title");
    var queText = document.getElementById("que-text");
    var responseView = document.getElementById("responses");
    var questionView = document.getElementById("questions1");
    var showWelcomeBtn = document.getElementById("show-welcome");
    var addQuestionBtn = document.getElementById("add-que");
    var addResponseBtn = document.getElementById("add-res");
    var resolveBtn = document.getElementById("resolve");
    var search = document.getElementById("search");
    var upvote = document.getElementById("upvote");
    var downvote = document.getElementById("downvote");
    var starred = document.getElementById("starred");
    var showstarBtn = document.getElementById("show-Starred");

    var activeQuestion;

    function setupQuestions(){
    	questionItems = document.querySelectorAll(".que-item");

    	for(let i = 0; i < questionItems.length; i++){
    		questionItems[i].addEventListener("click", function(e){
    			activeQuestion = questions[this.id-1];
    			console.log(activeQuestion);
    			showDescription();
    		});
    	}
    }

    function loadQuestions(){

    	let data = [];
    	questionView.innerText = "";
    	for(let queNo in questions){
    		let question = questions[queNo];
    		data.push(question);
    		// questionView.innerHTML += `<div class="que-item" id="${queNo}"><h2 class="que-title">${question.title}</h2><p class="que-text">${question.text}</p></div>`;
    	}
    	data.sort((a, b)=>{
    		return b.votes-a.votes;
    	});
    	data.forEach((que)=>{
    		questionView.innerHTML += `<div class="que-item" id="${que.id}"><h2 class="que-title">${que.title}</h2><p class="que-text">${que.text}</p>${(que.starred)?"<i class='fa fa-star active star'></i>":"<i></i>"}</div>`;
    	})
    	console.log(data);
    	setupQuestions();
    }

    function addQuestion(event){
    	event.preventDefault();
    	let form = document.getElementById("formAdd");
    	let title = form.subject.value;
    	let que = form.question.value;
    	if(title.length < 1 || que.length < 1) return false;
    	totalQuestions++;
    	let id = totalQuestions;
    	let newQue = {
    		id: id,
    		title: title,
    		text: que,
    		votes: 0,
    		responses: [],
    		resolved: false
    	};
    	questions[id] = newQue;
    	questionView.innerHTML += `<div class="que-item" id="${newQue.id}"><h2 class="que-title">${newQue.title}</h2><p class="que-text">${newQue.text}</p>${(que.starred)?"<i class='fa fa-star active star'></i>":"<i></i>"}</div>`;
    	setupQuestions();
    }

    function loadActiveQuestion(){
    	queTitle.innerText = activeQuestion.title;
    	queText.innerText = activeQuestion.text;
    	document.getElementById("votes").innerText = activeQuestion.votes;
    	loadResponses();
    	let form = document.getElementById("resForm");
    	form.subject.value = "";
    	form.question.value = "";
    }

    function loadResponses(){
    	responseView.innerText = "";
    	let responses = activeQuestion.responses;
    	responses.forEach((res) => {
    		responseView.innerHTML += `<div class="response"><h3 class="res-name">${res.name}</h3><p class="res-text">${res.comment}</p></div>`;
    	});
    }

    function addResponse(event){
    	event.preventDefault();
    	let form = document.getElementById("resForm");
    	let name = form.subject.value;
    	let comment = form.question.value;
    	if(name.length < 1 || comment.length < 1) return false;
    	let newRes = {
    		name: name,
    		comment: comment
    	};
    	activeQuestion.responses.push(newRes);
    	form.subject.value="";
    	form.question.value="";
    	loadResponses();
    	console.log(questions);
    }

    function resolveQuestion(){
    	delete questions[activeQuestion.id];
    	activeQuestion = {};
    	loadQuestions();
    	showWelcome();
    }

    function searchQuery(){
    	let query = search.value.toLowerCase();
    	console.log(query);
    	let data = [];
    	for(let queNo in questions){
    		let question = questions[queNo];
    		if(((question['title'].toLowerCase()).indexOf(query) != -1) || ((question['text'].toLowerCase()).indexOf(query) != -1)){
    			data.push(question);
    		}
    	}
    	console.log("Data = ", data);

    	if(data.length == 0){
    		questionView.innerText = "";
    		questionView.innerHTML = `<div class="que-item"><h2>No match found!</h2></div>`;
    	}else{
    		// loading questions
    		questionView.innerText = "";
    		data.forEach((que) => {
    			let title = que.title;
    			let text = que.text;
    			title = title.replace(new RegExp(query, 'gi'), '<span class="yellow">' + query + '</span>');
    			text = text.replace(new RegExp(query, 'gi'), '<span class="yellow">' + query + '</span>');
    			questionView.innerHTML += `<div class="que-item" id="${que.id}"><h2 class="que-title">${title}</h2><p class="que-text">${text}</p>${(que.starred)?"<i class='fa fa-star active star'></i>":"<i></i>"}</div>`;
    		});
    		setupQuestions();
    	}
    }

    function showDescription(){
    	welcome.style.display="none";
    	description.style.display="block";
    	loadActiveQuestion();
    	setstarred();
    }

    function showWelcome(){
    	description.style.display="none";
    	welcome.style.display="block";
    	let form = document.getElementById("formAdd");
    	form.subject.value = "";
    	form.question.value = "";
    }

    function upVote(){
    	activeQuestion.votes = activeQuestion.votes+1;
    	document.getElementById("votes").innerText = activeQuestion.votes;
    }

    function downVote(){
    	activeQuestion.votes = activeQuestion.votes-1;
    	document.getElementById("votes").innerText = activeQuestion.votes;
    }

    function setstarred(){
    	if(activeQuestion.starred)
    		starred.classList.add("active");
    	else
    		starred.classList.remove("active");
    }

    function addstarred(){
    	activeQuestion.starred = !activeQuestion.starred;
    	if(activeQuestion.starred)
    		starred.classList.add("active");
    	else
    		starred.classList.remove("active");
    	loadQuestions();
    }

    function showstarred(){
    	if(this.innerText == "View All"){
    		loadQuestions();
    		this.innerText = "Starred"
    		return;
    	}
    	//else
    	this.innerText = "View All";
    	let data = [];
    	questionView.innerText = "";
    	for(let queNo in questions){
    		let question = questions[queNo];
    		if(question.starred)
    			data.push(question);
    		// questionView.innerHTML += `<div class="que-item" id="${queNo}"><h2 class="que-title">${question.title}</h2><p class="que-text">${question.text}</p></div>`;
    	}
    	data.sort((a, b)=>{
    		return b.votes-a.votes;
    	});
    	data.forEach((que)=>{
    		questionView.innerHTML += `<div class="que-item" id="${que.id}"><h2 class="que-title">${que.title}</h2><p class="que-text">${que.text}</p>${(que.starred)?"<i class='fa fa-star active star'></i>":"<i></i>"}</div>`;
    	})
    	console.log(data);
    	setupQuestions();
    }

    function init(){
    	loadQuestions();
    	showWelcomeBtn.addEventListener("click", showWelcome);
    	addQuestionBtn.addEventListener("click", addQuestion);
    	addResponseBtn.addEventListener("click", addResponse);
    	resolveBtn.addEventListener("click", resolveQuestion);
    	search.addEventListener("keyup", searchQuery);
    	upvote.addEventListener("click", upVote);
    	downvote.addEventListener("click", downVote);
    	starred.addEventListener("click", addstarred);
    	showstarBtn.addEventListener("click", showstarred);
    }

    init();
    </script>
  </body>
</html>
